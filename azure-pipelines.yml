trigger:
  - master

variables:
  imageName: 'springbootapp'
  acrName: 'employee'
  acrLoginServer: 'employee.azurecr.io'
  containerName: 'employee-management'
  resourceGroup: 'app'
  location: 'centralindia'

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Build Spring Boot App
  - task: Maven@3
    inputs:
      mavenPomFile: 'employeeManagement/pom.xml'
      goals: 'package'
      options: '-DskipTests'
    displayName: 'Build Spring Boot App'

  # Step 2: Build and Push Docker Image to ACR
  - task: Docker@2
    inputs:
      containerRegistry: 'ACRServiceConnection'
      repository: '$(imageName)'
      command: 'buildAndPush'
      Dockerfile: 'employeeManagement/Dockerfile'
      tags: |
        latest
    displayName: 'Build and Push Docker Image to ACR'

  # Step 3: Deploy to Azure Container Instance (ACI)
  - task: AzureCLI@2
    inputs:
      azureSubscription: 'AzureServiceConnection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Deploying to Azure Container Instance..."

        az container create \
          --name $(containerName) \
          --resource-group $(resourceGroup) \
          --image $(acrLoginServer)/$(imageName):latest \
          --registry-login-server $(acrLoginServer) \
          --registry-username $(acrName) \
          --registry-password $(registryPassword) \
          --dns-name-label $(containerName)-$(Build.BuildId) \
          --ports 8080 \
          --location $(location) \
          --restart-policy Always

        echo "Deployment complete. App at:"
        echo "http://$(containerName)-$(Build.BuildId).$(location).azurecontainer.io:8080"
    displayName: 'Deploy Docker Image to ACI'
    env:
      registryPassword: $(ACR_PASSWORD)
